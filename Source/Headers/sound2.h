//
// Sound2.h
//


typedef struct
{
	short	effectNum;
	float	volumeAdjust;
	float	leftVolume, rightVolume;
	Boolean	isLooping;
}ChannelInfoType;



#define		BASE_EFFECT_RESOURCE	10000

#define		FULL_CHANNEL_VOLUME		kFullVolume
#define		NORMAL_CHANNEL_RATE		0x10000



enum
{
	SONG_INTRO = 0,
	SONG_THEME,
	SONG_LEVEL1_GARDEN,
	SONG_LEVEL2_POOL,
	SONG_LEVEL3_FIDO,
	SONG_LEVEL4_PLUMBING,
	SONG_LEVEL5_PLAYROOM,
	SONG_LEVEL6_CLOSET,
	SONG_LEVEL8_GARBAGE,
	SONG_LEVEL9_BALSA,
	SONG_LEVEL10_PARK,
	SONG_BONUS,
	SONG_WIN,
	SONG_LOSE
};

enum
{
	SOUND_BANK_MAIN 			= 0,
	SOUND_BANK_MENU				= 1,
	SOUND_BANK_BONUS			= 1,
	SOUND_BANK_LOSE				= 1,
	SOUND_BANK_TITLE			= 1,
	SOUND_BANK_MAINMENU			= 1,
	SOUND_BANK_LEVELSPECIFIC	= 2,
	SOUND_BANK_SONG				= 3,

	MAX_SOUND_BANKS
};



/***************** EFFECTS *************************/
// This table must match gEffectsTable
//

enum
{
		/* SONG */

	EFFECT_SONG = 0,

		/* DEFAULT */

	EFFECT_CHANGESELECT,
	EFFECT_JUMP,
	EFFECT_SKIPGLIDE,
	EFFECT_SKIPKICK,
	EFFECT_ACORNKICKED,
	EFFECT_SKIPLAND,
	EFFECT_FLYGOTKICKED,
	EFFECT_GETPOW,
	EFFECT_BUTTERFLYBOOM,
	EFFECT_FLYWALKBUZZ,
	EFFECT_SMACK,
	EFFECT_SPLASH,
	EFFECT_BUDDYLAUNCH,
	EFFECT_BUDDYBUZZ,
	EFFECT_CHIP_CHECKPOINT,
	EFFECT_DOORCREAK,
	EFFECT_THROWBOTTLECAP,
	EFFECT_BOTTLECAPBOUNCE,
	EFFECT_MOUSETRAP,
	EFFECT_BUDDYBOOM,
	EFFECT_CHIP_MAP4ACORN,
	EFFECT_SHIELD,
	EFFECT_FIRECRACKER,
	EFFECT_BUMBLERUMBLE,
	EFFECT_CHIP_CHECKPOINTDONE,
	EFFECT_CHIP_THANKS,
	EFFECT_GRENADEBOOM,
	EFFECT_PLANECRASH,
	EFFECT_DRAGONFLYBUZZ,
	EFFECT_BOTTLECRACK,
	EFFECT_BOTTLESHATTER,
	EFFECT_PULLTRAP,
	EFFECT_SNAPTRAP,
	EFFECT_POPACORN,
	EFFECT_FOOTSTEP,
	EFFECT_GRENADETHROW,


		/* GARDEN */

	EFFECT_GNOMESTEP,
	EFFECT_SPRINKLER,
	EFFECT_GNOMEGOTKICKED,
	EFFECT_SQUISHBERRY,
	EFFECT_CHIP_STUCKMOUSE,
	EFFECT_EVILPLANTSHOOT,
	EFFECT_SAM_FREEMICE,
	EFFECT_SAM_FREEMICE2,
	EFFECT_SAM_FINDSHELL,
	EFFECT_SAM_GOTSHELL,
	EFFECT_SAM_FINDHEAD,
	EFFECT_SAM_PUTHEADON,
	EFFECT_SAM_FIXEDSCARECROW,
	EFFECT_SAM_SQUASHBERRIES,
	EFFECT_SAM_SQUISHMORE,
	EFFECT_SAM_SQUISHDONE,
	EFFECT_SAM_GOTMICE,
	EFFECT_SAM_POOLKEY,
	EFFECT_SAM_FIDO,

			/* FIDO */

	EFFECT_GOTFLEAS,
	EFFECT_GOTTICKS,
	EFFECT_HAPPYDOG,
	EFFECT_REMEMBERDOG,
	EFFECT_TICKSUCK,
	EFFECT_TICKSPIT,
	EFFECT_TICKSTEP,
	EFFECT_TICKDIE,
	EFFECT_BONEHIT,


		/* PLUMBING */

	EFFECT_PLUMBINGINTRO,
	EFFECT_SLUDGEHIT,
	EFFECT_NAILHIT,
	EFFECT_TUNNELWATER,
	EFFECT_METALSCRAPE,
	EFFECT_HITPINECONE,
	EFFECT_HITLEAF,


		/* PLAYROOM */

	EFFECT_LASERBOOM,
	EFFECT_SAM_FINDMARBLE,
	EFFECT_SAM_KICKMARBLE,
	EFFECT_SAM_PINSDOWN,
	EFFECT_BOWLINGHIT,
	EFFECT_KICKMARBLE,
	EFFECT_OTTOMOTOR,
	EFFECT_CHIP_DORACE,
	EFFECT_CHIP_LOSTRACE,
	EFFECT_CHIP_WINNING,
	EFFECT_CHIP_YOUWON,
	EFFECT_CHIP_SAMWINNING,
	EFFECT_SAM_DOPUZZLE,
	EFFECT_SAM_PUZZLEDONE,
	EFFECT_OTTOSHOOT,
	EFFECT_SLOTCAR,
	EFFECT_OTTOFALL,
	EFFECT_CHIP_READY,
	EFFECT_CHIP_SET,
	EFFECT_CHIP_GO,

			/* BALSA */

	EFFECT_PROPELLER,
	EFFECT_HILLBOOM,
	EFFECT_BOMBBOOM,
	EFFECT_PLANEHIT,
	EFFECT_FROGJUMP,
	EFFECT_DIVEBOMB,
	EFFECT_BOMBFALL,
	EFFECT_BALSASHOOT,
	EFFECT_DRAGONFLYHIT,
	EFFECT_SAM_DESTROYHILLS,
	EFFECT_SAM_HILLSDESTROYED,
	EFFECT_SAM_HOWTOBOMB,

		/* CLOSET */

	EFFECT_SERVO,
	EFFECT_SERVO2,
	EFFECT_MINEBOOM,
	EFFECT_CHIPCLICK,
	EFFECT_SILICONDOOROPEN,
	EFFECT_SAM_GETREDCLOVERS,
	EFFECT_SAM_GOTREDCLOVERS,
	EFFECT_VACUUME,
	EFFECT_VACUUMECRUMCH,
	EFFECT_MOTHFLAP,
	EFFECT_SAM_MOTHBALLS,
	EFFECT_SAM_COMPUTERDOOR,

		/* GARBAGE */

	EFFECT_CANOPEN,
	EFFECT_SODASPRAY,
	EFFECT_SAM_GUTTERWATER,
	EFFECT_SAM_FREED,
	EFFECT_SAM_GLIDER,
	EFFECT_SAM_SODA,
	EFFECT_PROP2,

		/* PARK */

	EFFECT_FROGJUMP2,
	EFFECT_TONGUEHIT,
	EFFECT_TONGUESWOOSH,
	EFFECT_SAM_CATCHFISH,
	EFFECT_SAM_ANGLER,
	EFFECT_SAM_GETFOOD,
	EFFECT_SAM_GOTFOOD,
	EFFECT_ANTBITE,
	EFFECT_FISHFLOP,
	EFFECT_SAM_ENTERHIVE,
	EFFECT_SAM_KEEPFISHING,
	EFFECT_SAM_MOREFOOD,
	EFFECT_SAM_GETKINDLING,
	EFFECT_SAM_MOREKINDLING,
	EFFECT_SAM_SPARK,
	EFFECT_SAM_BOTTLEKEY,


		/* TITLE */

	EFFECT_LOGOBOUNCE,
	EFFECT_FLYSWATTER,
	EFFECT_LOGOVANISH,
	EFFECT_TITLEFLYBUZZ,
	EFFECT_SMACKDOWN,
	EFFECT_STOMP,


		/* BONUS */

	EFFECT_CLOVERBONUS,
	EFFECT_MOUSEBONUS,

	NUM_EFFECTS
};



/**********************/
/* SOUND BANK TABLES  */
/**********************/
//
// These are simple enums for equating the sound effect #'s in each sound
// bank's rez file.
//

/******** SOUND_BANK_MAIN *********/

enum
{
	SOUND_DEFAULT_CHANGESELECT = 0,
	SOUND_DEFAULT_JUMP,
	SOUND_DEFAULT_SKIPGLIDE,
	SOUND_DEFAULT_SKIPKICK,
	SOUND_DEFAULT_ACORNKICKED,
	SOUND_DEFAULT_SKIPLAND,
	SOUND_DEFAULT_FLYGOTKICKED,
	SOUND_DEFAULT_GETPOT,
	SOUND_DEFAULT_BUTTERFLYBOOM,
	SOUND_DEFAULT_FLYWALKBUZZ,
	SOUND_DEFAULT_SMACK,
	SOUND_DEFAULT_SPLASH,
	SOUND_DEFAULT_BUDDYLAUNCH,
	SOUND_DEFAULT_BUDDYBUZZ,
	SOUND_DEFAULT_CHIP_CHECKPOINT,
	SOUND_DEFAULT_DOORCREAK,
	SOUND_DEFAULT_THROWBOTTLECAP,
	SOUND_DEFAULT_BOTTLECAPBOUNCE,
	SOUND_DEFAULT_MOUSETRAP,
	SOUND_DEFAULT_BUDDYBOOM,
	SOUND_DEFAULT_CHIP_MAP4ACORN,
	SOUND_DEFAULT_SHIELD,
	SOUND_DEFAULT_FIRECRACKER,
	SOUND_DEFAULT_BUMBLERUMBLE,
	SOUND_DEFAULT_CHIP_CHECKPOINTDONE,
	SOUND_DEFAULT_CHIP_THANKS,
	SOUND_DEFAULT_GRENADEBOOM,
	SOUND_DEFAULT_PLANECRASH,
	SOUND_DEFAULT_DRAGONFLYBUZZ,
	SOUND_DEFAULT_BOTTLECRACK,
	SOUND_DEFAULT_BOTTLESHATTER,
	SOUND_DEFAULT_PULLTRAP,
	SOUND_DEFAULT_SNAPTRAP,
	SOUND_DEFAULT_POPACORN,
	SOUND_DEFAULT_FOOTSTEP,
	SOUND_DEFAULT_GRENADETHROW
};


/********** SOUND BANK: GARDEN **************/

enum
{
	SOUND_GARDEN_GNOMESTEP = 0,
	SOUND_GARDEN_SPRINKLER,
	SOUND_GARDEN_GNOMEGOTKICKED,
	SOUND_GARDEN_SQUISHBERRY,
	SOUND_GARDEN_CHIP_STUCKMOUSE,
	SOUND_GARDEN_EVILPLANTSHOOT,
	SOUND_GARDEN_SAM_FREEMICE,
	SOUND_GARDEN_SAM_FREEMICE2,
	SOUND_GARDEN_SAM_FINDSHELL,
	SOUND_GARDEN_SAM_GOTSHELL,
	SOUND_GARDEN_SAM_FINDHEAD,
	SOUND_GARDEN_SAM_PUTHEADON,
	SOUND_GARDEN_SAM_FIXEDSCARECROW,
	SOUND_GARDEN_SAM_SQUASHBERRIES,
	SOUND_GARDEN_SAM_SQUISHMORE,
	SOUND_GARDEN_SAM_SQUISHDONE,
	SOUND_GARDEN_SAM_GOTMICE,
	SOUND_GARDEN_SAM_POOLKEY,
	SOUND_GARDEN_SAM_FIDO
};


/********** SOUND BANK: FIDO **************/

enum
{
	SOUND_FIDO_GOTFLEAS = 0,
	SOUND_FIDO_GOTTICKS,
	SOUND_FIDO_HAPPYDOG,
	SOUND_FIDO_REMEMBER,
	SOUND_FIDO_TICKSUCK,
	SOUND_FIDO_TICKSPIT,
	SOUND_FIDO_TICKSTEP,
	SOUND_FIDO_TICKDIE,
	SOUND_FIDO_BONEHIT
};


/********** SOUND BANK: PLUMBING **************/

enum
{
	SOUND_PLUMBING_INTRO = 0,
	SOUND_PLUMBING_SLUDGEHIT,
	SOUND_PLUMBING_NAILHIT,
	SOUND_PLUMBING_WATER,
	SOUND_PLUMBING_METALSCRAPE,
	SOUND_PLUMBING_PINECONE,
	SOUND_PLUMBING_LEAF
};


/********** SOUND BANK: PLAYROOM **************/

enum
{
	SOUND_PLAYROOM_LASERBOOM = 0,
	SOUND_PLAYROOM_SAM_FINDMARBLE,
	SOUND_PLAYROOM_SAM_KICKMARBLE,
	SOUND_PLAYROOM_SAM_PINSDOWN,
	SOUND_PLAYROOM_BOWLINGHIT,
	SOUND_PLAYROOM_KICKMARBLE,
	SOUND_PLAYROOM_OTTOMOTOR,
	SOUND_PLAYROOM_CHIP_DORACE,
	SOUND_PLAYROOM_CHIP_LOSTRACE,
	SOUND_PLAYROOM_CHIP_WINNING,
	SOUND_PLAYROOM_CHIP_YOUWON,
	SOUND_PLAYROOM_CHIP_SAMWINNING,
	SOUND_PLAYROOM_SAM_DOPUZZLE,
	SOUND_PLAYROOM_SAM_PUZZLEDONE,
	SOUND_PLAYROOM_OTTOSHOOT,
	SOUND_PLAYROOM_SLOTCAR,
	SOUND_PLAYROOM_OTTOFALL,
	SOUND_PLAYROOM_CHIP_READY,
	SOUND_PLAYROOM_CHIP_SET,
	SOUND_PLAYROOM_CHIP_GO
};


/********** SOUND BANK: BALSA **************/

enum
{
	SOUND_BALSA_PROPELLER = 0,
	SOUND_BALSA_HILLBOOM,
	SOUND_BALSA_BOMBBOOM,
	SOUND_BALSA_PLANEHIT,
	SOUND_BALSA_FROGJUMP,
	SOUND_BALSA_DIVEBOMB,
	SOUND_BALSA_BOMBFALL,
	SOUND_BALSA_SHOOT,
	SOUND_DRAGONFLYHIT,
	SOUND_SAM_DESTROYHILLS,
	SOUND_SAM_HILLSDESTROYED,
	SOUND_SAM_HOWTOBOMB
};


/********** SOUND BANK: CLOSET **************/

enum
{
	SOUND_CLOSET_SERVO = 0,
	SOUND_CLOSET_SERVO2,
	SOUND_CLOSET_MINEBOOM,
	SOUND_CLOSET_CHIPCLICK,
	SOUND_CLOSET_SILICONDOOROPEN,
	SOUND_CLOSET_SAM_GETREDCLOVERS,
	SOUND_CLOSET_SAM_GOTREDCLOVERS,
	SOUND_CLOSET_VACUUME,
	SOUND_CLOSET_VACUUMECRUNCH,
	SOUND_CLOSET_MOTHFLAP,
	SOUND_CLOSET_SAM_MOTHBALLS,
	SOUND_CLOSET_SAM_COMPUTERDOOR
};


/********** SOUND BANK: GARBAGE **************/

enum
{
	SOUND_GARBAGE_CANOPEN = 0,
	SOUND_GARBAGE_SODASPRAY,
	SOUND_GARBAGE_SAM_GUTTER,
	SOUND_GARBAGE_SAM_FREED,
	SOUND_GARBAGE_SAM_GLIDER,
	SOUND_GARBAGE_SAM_SODA,
	SOUND_GARBAGE_PROP
};



/********** SOUND BANK: PARK **************/

enum
{
	SOUND_PARK_FROGJUMP = 0,
	SOUND_PARK_TONGUEHIT,
	SOUND_PARK_TONGUESWOOSH,
	SOUND_PARK_SAM_CATCHFISH,
	SOUND_PARK_SAM_ANGLER,
	SOUND_PARK_SAM_GETFOOD,
	SOUND_PARK_SAM_GOTFOOD,
	SOUND_PARK_ANTBITE,
	SOUND_PARK_FISHFLOP,
	SOUND_PARK_SAM_ENTERHIVE,
	SOUND_PARK_SAM_KEEPFISHING,
	SOUND_PARK_SAM_MOREFOOD,
	SOUND_PARK_SAM_GETKINDLING,
	SOUND_PARK_SAM_MOREKINDLING,
	SOUND_PARK_SAM_SPARK,
	SOUND_PARK_SAM_BOTTLEKEY
};


/********** SOUND BANK: TITLE **************/

enum
{
	SOUND_TITLE_LOGOBOUNCE,
	SOUND_TITLE_FLYSWATTER,
	SOUND_TITLE_LOGOVANISH,
	SOUND_TITLE_FLYBUZZ,
	SOUND_TITLE_SMACKDOWN,
	SOUND_TITLE_STOMP
};


/********** SOUND BANK: BONUS **************/

enum
{
	SOUND_BONUS_CLOVERBONUS,
	SOUND_BONUS_MOUSEBONUS
};


//===================== PROTOTYPES ===================================


extern void	InitSoundTools(void);
void ShutdownSound(void);

void StopAChannel(short *channelNum);
extern	void StopAllEffectChannels(void);
void PlaySong(short songNum, Boolean loopFlag);
extern void	KillSong(void);
extern	short PlayEffect(short effectNum);
short PlayEffect_Parms3D(short effectNum, OGLPoint3D *where, uint32_t rateMultiplier, float volumeAdjust);
extern void	ToggleMusic(void);
extern void	DoSoundMaintenance(void);
extern	void LoadSoundBank(FSSpec *spec, long bankNum);
extern	void WaitEffectsSilent(void);
extern	void DisposeSoundBank(short bankNum);
short PlayEffect_Parms(short effectNum, uint32_t leftVolume, uint32_t rightVolume, unsigned long rateMultiplier);
void ChangeChannelVolume(short channel, float leftVol, float rightVol);
short PlayEffect3D(short effectNum, OGLPoint3D *where);
Boolean Update3DSoundChannel(short effectNum, short *channel, OGLPoint3D *where);
Boolean IsEffectChannelPlaying(short chanNum);
void UpdateListenerLocation(OGLSetupOutputType *setupInfo);
void ChangeChannelRate(short channel, long rateMult);
Boolean StopAChannelIfEffectNum(short *channelNum, short effectNum);






